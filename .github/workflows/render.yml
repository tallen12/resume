name: Build LaTeX document
on: 
  push:
    branches: [ "main" ]
jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - name: Use redacted PII
        run: mv redacted-pii.tex pii.tex
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@master
        with:
          root_file: resume.tex
          working_directory: ./
      - name: List Files
        run: ls
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - id: committer
        run: echo "string=${{ steps.app-token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>"  >> "$GITHUB_OUTPUT"
      - run: echo "committer string is ${{ steps.committer.outputs.string }}"
      - name: Push compiled PDF to repo
        run: |
          gh api graphql \
            -F $githubRepository=$GITHUB_REPOSITORY \
            -F branchName=$BRANCH \
            -F expectedHeadOid=$(git rev-parse HEAD) \
            -F commitMessage="chore: commit file" \
            -F files[][path]="README.md" -F files[][contents]=$(base64 -w0 resume.pdf) \
            -F 'query=@.github/api/createCommitOnBranch.gql'
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          BRANCH: "main"